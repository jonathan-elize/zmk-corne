/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&lt 6 ESC>;
        };
        combo_delete {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&lt 3 DELETE>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&none &kp Q      &kp W      &kp E       &kp R       &kp T   &kp Y &kp U       &kp I       &kp O      &kp P        &none
&none &mt LGUI A &mt LALT S &mt LCTRL D &mt LSHFT F &kp G   &kp H &mt LSHFT J &mt LCTRL K &mt LALT L &mt LGUI SQT &none
&none &kp Z      &kp X      &kp C       &kp V       &kp B   &kp N &kp M       &kp COMMA   &kp DOT    &kp FSLH     &none
&lt 6 ESC &lt 4 SPACE &lt 5 TAB                             &lt 2 RET &lt 1 BACKSPACE &lt 3 DELETE
                        >;
                };

                num_layer {
                        bindings = <
&none &kp LBKT   &kp N7 &kp N8 &kp N9 &kp RBKT     &none &none    &none    &none   &none       &none
&none &kp SEMI   &kp N4 &kp N5 &kp N6 &kp EQUAL    &none &kp LSHFT &kp LCTRL &kp RALT &kp LGUI &none
&none &kp TILDE  &kp N1 &kp N2 &kp N3 &kp BSLH     &none &none    &none    &none   &none       &none
        &kp DOT  &kp N0 &kp MINUS                  &none  &kp RET  &none
                        >;
                };

                sym_layer {
                        bindings = <
&none &kp LBRC  &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RBRC   &none &none &none &none &none               &none
&none &kp COLON &kp DLLR &kp PRCNT       &kp CARET &kp PLUS   &none &kp LSHFT &kp LCTRL &kp RALT &kp LGUI &none
&none &kp TILDE &kp EXCL &kp AT          &kp HASH  &kp PIPE   &none &none &none &none &none               &none
        &kp LPAR &kp RPAR &kp UNDER                           &kp RET &none &none
                        >;
                };

                fun_layer {
                        bindings = <
&none &kp F12 &kp F7 &kp F8 &kp F9 &kp N1   &none &none &none &none &none               &none
&none &kp F11 &kp F4 &kp F5 &kp F6 &kp N1   &none &kp LSHFT &kp LCTRL &kp RALT &kp LGUI &none
&none &kp F10 &kp F1 &kp F2 &kp F3 &kp N1   &none &none &none &none &none               &none
        &kp CARET    &kp SPACE &kp TAB       &none &none &kp RET  
                        >;
                };

                nav_layer {
                        bindings = <
&none &none &none &none &none &none                 &none &none &none &none &none                   &none
&none &kp LGUI &kp RALT &kp LCTRL &kp LSHFT &none   &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &caps_word &none
&none &none &none &none &none &none                 &kp HOME &kp PG_DN &kp PG_UP &kp END   &none    &none
&none  &kp RET  &none                               &kp RET  &kp DELETE  &kp BACKSPACE
                        >;
                };

                mouse_layer {
                        bindings = <
&none &none &none &none &none &none &none                 &none &none &none &none &none &none
&none &none &kp LGUI &kp RALT &kp LCTRL &kp LSHFT &none   &none &none &none &none &none &none
&none &none &none &none &none &none &none                 &none &none &none &none &none &none
&none  &none  &kp RET                                     &kp RET  &kp DELETE  &kp BACKSPACE
                        >;
                };

                media_layer {
                        bindings = <
&none &none &none &none &none &none                 &none &bl BL_INC &none &none &bl BL_TOG                          &none
&none &kp LGUI &kp RALT &kp LCTRL &kp LSHFT &none   &kp C_RW &kp C_VOL_DN  &kp C_VOL_UP &kp C_FF &none               &none
&none &none &none &none &none &none                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
&kp RET  &none  &none                               &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE
                        >;
                };
        };
};
